# coding: utf-8

"""
    Fingerprint Pro Server API

    Fingerprint Pro Server API allows you to get information about visitors and about individual events in a server environment. It can be used for data exports, decision-making, and data analysis scenarios. Server API is intended for server-side usage, it's not intended to be used from the client side, whether it's a browser or a mobile device.   # noqa: E501

    OpenAPI spec version: 3
    Contact: support@fingerprint.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import re  # noqa: F401
from typing import Dict, List, Optional  # noqa: F401
from fingerprint_pro_server_api_sdk.base_model import BaseModel
from fingerprint_pro_server_api_sdk.models.visit import Visit


class VisitorsGetResponse(BaseModel):
    """
    Pagination-related fields `lastTimestamp` and `paginationKey` are included if you use a pagination parameter like `limit` or `before` and there is more data available on the next page.

    NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'visitor_id': 'str',
        'visits': 'list[Visit]',
        'last_timestamp': 'int',
        'pagination_key': 'str'
    }

    attribute_map = {
        'visitor_id': 'visitorId',
        'visits': 'visits',
        'last_timestamp': 'lastTimestamp',
        'pagination_key': 'paginationKey'
    }

    def __init__(self, visitor_id=None, visits=None, last_timestamp=None, pagination_key=None):  # noqa: E501
        """VisitorsGetResponse - a model defined in Swagger"""  # noqa: E501
        self._visitor_id = None
        self._visits = None
        self._last_timestamp = None
        self._pagination_key = None
        self.discriminator = None
        self.visitor_id = visitor_id
        self.visits = visits
        if last_timestamp is not None:
            self.last_timestamp = last_timestamp
        if pagination_key is not None:
            self.pagination_key = pagination_key

    @property
    def visitor_id(self) -> str:
        """Gets the visitor_id of this VisitorsGetResponse.  # noqa: E501


        :return: The visitor_id of this VisitorsGetResponse.  # noqa: E501
        """
        return self._visitor_id

    @visitor_id.setter
    def visitor_id(self, visitor_id: str):
        """Sets the visitor_id of this VisitorsGetResponse.


        :param visitor_id: The visitor_id of this VisitorsGetResponse.  # noqa: E501
        """
        if visitor_id is None:
            raise ValueError("Invalid value for `visitor_id`, must not be `None`")  # noqa: E501

        self._visitor_id = visitor_id

    @property
    def visits(self) -> List[Visit]:
        """Gets the visits of this VisitorsGetResponse.  # noqa: E501


        :return: The visits of this VisitorsGetResponse.  # noqa: E501
        """
        return self._visits

    @visits.setter
    def visits(self, visits: List[Visit]):
        """Sets the visits of this VisitorsGetResponse.


        :param visits: The visits of this VisitorsGetResponse.  # noqa: E501
        """
        if visits is None:
            raise ValueError("Invalid value for `visits`, must not be `None`")  # noqa: E501

        self._visits = visits

    @property
    def last_timestamp(self) -> Optional[int]:
        """Gets the last_timestamp of this VisitorsGetResponse.  # noqa: E501

        ⚠️ Deprecated paging attribute, please use `paginationKey` instead. Timestamp of the last visit in the current page of results.   # noqa: E501

        :return: The last_timestamp of this VisitorsGetResponse.  # noqa: E501
        """
        return self._last_timestamp

    @last_timestamp.setter
    def last_timestamp(self, last_timestamp: Optional[int]):
        """Sets the last_timestamp of this VisitorsGetResponse.

        ⚠️ Deprecated paging attribute, please use `paginationKey` instead. Timestamp of the last visit in the current page of results.   # noqa: E501

        :param last_timestamp: The last_timestamp of this VisitorsGetResponse.  # noqa: E501
        """

        self._last_timestamp = last_timestamp

    @property
    def pagination_key(self) -> Optional[str]:
        """Gets the pagination_key of this VisitorsGetResponse.  # noqa: E501

        Request ID of the last visit in the current page of results. Use this value in the following request as the `paginationKey` parameter to get the next page of results.  # noqa: E501

        :return: The pagination_key of this VisitorsGetResponse.  # noqa: E501
        """
        return self._pagination_key

    @pagination_key.setter
    def pagination_key(self, pagination_key: Optional[str]):
        """Sets the pagination_key of this VisitorsGetResponse.

        Request ID of the last visit in the current page of results. Use this value in the following request as the `paginationKey` parameter to get the next page of results.  # noqa: E501

        :param pagination_key: The pagination_key of this VisitorsGetResponse.  # noqa: E501
        """

        self._pagination_key = pagination_key

