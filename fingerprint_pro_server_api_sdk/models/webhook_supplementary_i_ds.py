# coding: utf-8

"""
    Fingerprint Server API

    Fingerprint Server API allows you to search, update, and delete identification events in a server environment. It can be used for data exports, decision-making, and data analysis scenarios. Server API is intended for server-side usage, it's not intended to be used from the client side, whether it's a browser or a mobile device.   # noqa: E501

    OpenAPI spec version: 3
    Contact: support@fingerprint.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import re  # noqa: F401
from typing import Dict, List, Optional  # noqa: F401
from fingerprint_pro_server_api_sdk.base_model import BaseModel
from fingerprint_pro_server_api_sdk.models.supplementary_id import SupplementaryID
from fingerprint_pro_server_api_sdk.models.supplementary_id import SupplementaryID


class WebhookSupplementaryIDs(BaseModel):
    """
    Other identities that have been established for a given Visitor.

    NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'standard': 'SupplementaryID',
        'high_recall': 'SupplementaryID'
    }

    nullable_map = {
        'standard': False,
        'high_recall': False
    }

    attribute_map = {
        'standard': 'standard',
        'high_recall': 'highRecall'
    }

    def __init__(self, standard=None, high_recall=None):  # noqa: E501
        """WebhookSupplementaryIDs - a model defined in Swagger"""  # noqa: E501
        self._standard = None
        self._high_recall = None
        self.discriminator = None
        self.standard = standard
        self.high_recall = high_recall

    @property
    def standard(self) -> SupplementaryID:
        """Gets the standard of this WebhookSupplementaryIDs.  # noqa: E501


        :return: The standard of this WebhookSupplementaryIDs.  # noqa: E501
        """
        return self._standard

    @standard.setter
    def standard(self, standard: SupplementaryID):
        """Sets the standard of this WebhookSupplementaryIDs.


        :param standard: The standard of this WebhookSupplementaryIDs.  # noqa: E501
        """
        if standard is None:
            raise ValueError("Invalid value for `standard`, must not be `None`")  # noqa: E501

        self._standard = standard

    @property
    def high_recall(self) -> SupplementaryID:
        """Gets the high_recall of this WebhookSupplementaryIDs.  # noqa: E501


        :return: The high_recall of this WebhookSupplementaryIDs.  # noqa: E501
        """
        return self._high_recall

    @high_recall.setter
    def high_recall(self, high_recall: SupplementaryID):
        """Sets the high_recall of this WebhookSupplementaryIDs.


        :param high_recall: The high_recall of this WebhookSupplementaryIDs.  # noqa: E501
        """
        if high_recall is None:
            raise ValueError("Invalid value for `high_recall`, must not be `None`")  # noqa: E501

        self._high_recall = high_recall

