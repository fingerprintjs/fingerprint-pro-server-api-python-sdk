# coding: utf-8

"""
    Fingerprint Pro Server API

    Fingerprint Pro Server API allows you to get information about visitors and about individual events in a server environment. It can be used for data exports, decision-making, and data analysis scenarios. Server API is intended for server-side usage, it's not intended to be used from the client side, whether it's a browser or a mobile device.   # noqa: E501

    OpenAPI spec version: 3
    Contact: support@fingerprint.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import re  # noqa: F401
from typing import Dict, List, Optional  # noqa: F401
from fingerprint_pro_server_api_sdk.base_model import BaseModel


class VelocityIntervals(BaseModel):
    """
    Is absent if the velocity data could not be generated for the visitor ID. 

    NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        '_5m': 'int',
        '_1h': 'int',
        '_24h': 'int'
    }

    attribute_map = {
        '_5m': '5m',
        '_1h': '1h',
        '_24h': '24h'
    }

    def __init__(self, _5m=None, _1h=None, _24h=None):  # noqa: E501
        """VelocityIntervals - a model defined in Swagger"""  # noqa: E501
        self.__5m = None
        self.__1h = None
        self.__24h = None
        self.discriminator = None
        self._5m = _5m
        self._1h = _1h
        if _24h is not None:
            self._24h = _24h

    @property
    def _5m(self) -> int:
        """Gets the _5m of this VelocityIntervals.  # noqa: E501


        :return: The _5m of this VelocityIntervals.  # noqa: E501
        """
        return self.__5m

    @_5m.setter
    def _5m(self, _5m: int):
        """Sets the _5m of this VelocityIntervals.


        :param _5m: The _5m of this VelocityIntervals.  # noqa: E501
        """
        if _5m is None:
            raise ValueError("Invalid value for `_5m`, must not be `None`")  # noqa: E501

        self.__5m = _5m

    @property
    def _1h(self) -> int:
        """Gets the _1h of this VelocityIntervals.  # noqa: E501


        :return: The _1h of this VelocityIntervals.  # noqa: E501
        """
        return self.__1h

    @_1h.setter
    def _1h(self, _1h: int):
        """Sets the _1h of this VelocityIntervals.


        :param _1h: The _1h of this VelocityIntervals.  # noqa: E501
        """
        if _1h is None:
            raise ValueError("Invalid value for `_1h`, must not be `None`")  # noqa: E501

        self.__1h = _1h

    @property
    def _24h(self) -> Optional[int]:
        """Gets the _24h of this VelocityIntervals.  # noqa: E501

        The `24h` interval of `distinctIp`, `distinctLinkedId`, `distinctCountry`, `distinctIpByLinkedId` and `distinctVisitorIdByLinkedId` will be omitted if the number of `events`` for the visitor ID in the last 24 hours (`events.intervals.['24h']`) is higher than 20.000.   # noqa: E501

        :return: The _24h of this VelocityIntervals.  # noqa: E501
        """
        return self.__24h

    @_24h.setter
    def _24h(self, _24h: Optional[int]):
        """Sets the _24h of this VelocityIntervals.

        The `24h` interval of `distinctIp`, `distinctLinkedId`, `distinctCountry`, `distinctIpByLinkedId` and `distinctVisitorIdByLinkedId` will be omitted if the number of `events`` for the visitor ID in the last 24 hours (`events.intervals.['24h']`) is higher than 20.000.   # noqa: E501

        :param _24h: The _24h of this VelocityIntervals.  # noqa: E501
        """

        self.__24h = _24h

