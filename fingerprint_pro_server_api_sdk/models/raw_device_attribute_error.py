# coding: utf-8

"""
    Fingerprint Pro Server API

    Fingerprint Pro Server API allows you to get information about visitors and about individual events in a server environment. It can be used for data exports, decision-making, and data analysis scenarios. Server API is intended for server-side usage, it's not intended to be used from the client side, whether it's a browser or a mobile device.   # noqa: E501

    OpenAPI spec version: 3
    Contact: support@fingerprint.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import re  # noqa: F401
from typing import Dict, List, Optional  # noqa: F401
from fingerprint_pro_server_api_sdk.base_model import BaseModel


class RawDeviceAttributeError(BaseModel):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'name': 'str',
        'message': 'str'
    }

    attribute_map = {
        'name': 'name',
        'message': 'message'
    }

    def __init__(self, name=None, message=None):  # noqa: E501
        """RawDeviceAttributeError - a model defined in Swagger"""  # noqa: E501
        self._name = None
        self._message = None
        self.discriminator = None
        if name is not None:
            self.name = name
        if message is not None:
            self.message = message

    @property
    def name(self) -> Optional[str]:
        """Gets the name of this RawDeviceAttributeError.  # noqa: E501


        :return: The name of this RawDeviceAttributeError.  # noqa: E501
        """
        return self._name

    @name.setter
    def name(self, name: Optional[str]):
        """Sets the name of this RawDeviceAttributeError.


        :param name: The name of this RawDeviceAttributeError.  # noqa: E501
        """

        self._name = name

    @property
    def message(self) -> Optional[str]:
        """Gets the message of this RawDeviceAttributeError.  # noqa: E501


        :return: The message of this RawDeviceAttributeError.  # noqa: E501
        """
        return self._message

    @message.setter
    def message(self, message: Optional[str]):
        """Sets the message of this RawDeviceAttributeError.


        :param message: The message of this RawDeviceAttributeError.  # noqa: E501
        """

        self._message = message

